#!/usr/bin/env perl

use strict;
use warnings;
use autodie;
use IO::Handle;


my $stdin = IO::Handle->new()->fdopen(fileno(STDIN), "r");
my $stdout = IO::Handle->new()->fdopen(fileno(STDOUT), "w");
my $stderr = IO::Handle->new()->fdopen(fileno(STDERR), "w");

my $use_backslash = 1;
my @args = @ARGV;
if (grep { /^--no-backslash$/ } @args) {
    $use_backslash = 0;
}

@args = grep { !/^--no-backslash$/ } @args;

my $query_path = $args[0];
my $output_path = $args[1];

if (!defined($query_path)) {
    $stderr->print("usage: query2copy query.sql target.csv\n");
    exit(1);
}

if (!defined($output_path)) {
    $stderr->print("usage: query2copy query.sql target.csv\n");
    exit(1);
}

if (! -f $query_path && $query_path ne "-") {
    $stderr->print("file '$query_path' does not exist.\n");
    $stderr->print("usage: query2copy query.sql target.csv\n");
    exit(1);
}

sub escape {
    my $val = shift;

    return $val =~ s/'/''/gr;
}

if ($output_path eq "-") {
    $output_path = "stdout";
} else {
    $output_path = "'" . escape($output_path) ."'";
}

my $query = undef;
if ($query_path eq "-") {
    $query = $stdin;
} else {
    open($query, "<", $query_path);
}

my @sets = ();
my $text = "";

while (my $line = <$query>) {
    $line =~ tr/\x{feff}//d;
    $line =~ s/--.*$//;
    $line =~ s/^\s+//;
    $line =~ s/\s+$//;

    # if this line starts with \set or set, put it aside. we'll append them to
    # the top of the buffer we generate later.
    if ($line =~ /^[\\]?set/) {
        push(@sets, $line);
        next;
    }

    if (length($line) > 0) {
        $text .= "$line ";
    }
}

$text =~ s/\s+$//;
$text =~ s/;+//;
$text =~ s/\s+$//;

my $set_text = "";
for my $set (@sets) {
    $set_text .= $set . "\n";
}

if ($set_text) {
    $set_text .= "\n";
}

my $copy = "\\copy";
if (!$use_backslash) {
    $copy = "copy";
}

$text = $set_text . "$copy (" . $text . ") to $output_path with csv header\n";

$stdout->print($text);

